<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Manutenção CSL - SEMCAS</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body { font-family: 'Arial', sans-serif; margin: 0; padding: 10px; background: #f0f4f8; color: #333; }
        .header { text-align: center; margin-bottom: 20px; }
        .header img { max-width: 80px; }
        .header h1 { font-size: 1.5em; color: #0056b3; }
        .header p { font-size: 0.8em; color: #666; }
        .tabs { display: flex; flex-wrap: wrap; gap: 5px; margin-bottom: 15px; }
        .tab-button { flex: 1; padding: 10px; background: #007bff; color: white; border: none; cursor: pointer; border-radius: 5px; font-size: 0.9em; }
        .tab-button.active { background: #004080; }
        .tab-content { display: none; background: white; padding: 15px; border-radius: 5px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .tab-content.active { display: block; }
        .form-section { margin-bottom: 15px; }
        .form-section h2, .form-section h3 { margin: 10px 0; font-size: 1.1em; color: #007bff; }
        .form-group { margin-bottom: 10px; }
        .form-group label { display: block; margin-bottom: 5px; font-size: 0.9em; }
        .form-group input, .form-group textarea, .form-group select { width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 4px; font-size: 0.9em; }
        .equipe-container { margin-bottom: 10px; border: 1px solid #ddd; padding: 10px; border-radius: 4px; background: #f9f9f9; }
        .remove-btn { background: #dc3545; color: white; border: none; padding: 5px 10px; cursor: pointer; border-radius: 4px; font-size: 0.8em; }
        .add-btn { background: #28a745; color: white; border: none; padding: 8px 15px; cursor: pointer; border-radius: 4px; font-size: 0.9em; width: 100%; }
        .submit-btn { background: #007bff; color: white; border: none; padding: 10px; cursor: pointer; border-radius: 4px; font-size: 0.9em; width: 100%; }
        .alert { background: #ffc107; padding: 10px; border-radius: 4px; margin-bottom: 15px; display: none; font-size: 0.9em; }
        .rdos-card { background: #fff; border: 1px solid #ddd; border-radius: 8px; padding: 10px; margin-bottom: 10px; box-shadow: 0 1px 5px rgba(0,0,0,0.1); }
        .rdos-card h4 { margin: 0 0 5px; font-size: 1em; }
        .rdos-card p { margin: 5px 0; font-size: 0.8em; }
        .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; align-items: center; justify-content: center; }
        .modal-content { background: white; padding: 20px; border-radius: 8px; max-width: 90%; text-align: center; box-shadow: 0 4px 20px rgba(0,0,0,0.2); }
        .close-btn { float: right; font-size: 1.2em; cursor: pointer; color: #aaa; }
        .share-btn { background: #25D366; color: white; border: none; padding: 8px; border-radius: 4px; cursor: pointer; margin-top: 10px; font-size: 0.9em; }
        @media (max-width: 600px) {
            .tabs { flex-direction: column; }
            .tab-button { font-size: 1em; }
            .form-group input, .form-group textarea { font-size: 1em; }
            .photos img { max-width: 100%; }
        }
    </style>
</head>
<body>
    <div class="header">
        <img src="https://www.saoluis.ma.gov.br/img/logo_mobile.png?1738946184" alt="Logo SEMCAS">
        <h1>Sistema de Manutenção CSL - SEMCAS</h1>
        <p>PREFEITURA MUNICIPAL DE SÃO LUÍS</p>
        <p>SECRETARIA MUNICIPAL DA CRIANÇA E ASSISTÊNCIA SOCIAL - SEMCAS</p>
        <p>COORDENAÇÃO DE SUPORTE TRANSPORTE E LOGÍSTICA - CSL</p>
    </div>

    <div class="tabs">
        <button class="tab-button active" onclick="openTab('novo-rdo')"><i class="fas fa-plus"></i> Novo RDO</button>
        <button class="tab-button" onclick="openTab('rdos-concluidos')"><i class="fas fa-check-circle"></i> RDOs Concluídos</button>
        <button class="tab-button" onclick="openTab('agendamentos')"><i class="fas fa-calendar-alt"></i> Agendamentos</button>
    </div>

    <div id="novo-rdo" class="tab-content active">
        <h2>Novo Relatório Diário de Obras</h2>
        <div class="form-section">
            <h3>Opções de RDO</h3>
            <div class="form-group">
                <label>Tipo de RDO:</label>
                <select id="rdo-type" onchange="toggleRdoType()">
                    <option value="novo">Criar Novo (Emergência)</option>
                    <option value="agendamento">A partir de Agendamento</option>
                </select>
                <select id="agendamento-select" style="display: none; margin-top: 10px;"></select>
            </div>
        </div>
        <div class="form-section">
            <h3>Dados Gerais</h3>
            <div class="form-group">
                <label>Data:</label>
                <input type="date" id="data">
            </div>
            <div class="form-group">
                <label>Nome da Unidade:</label>
                <input type="text" id="unidade">
            </div>
            <div class="form-group">
                <label>Fiscal:</label>
                <input type="text" id="fiscal">
            </div>
        </div>
        <div class="form-section">
            <h3>Mão de Obra</h3>
            <div id="equipe-container">
                <div class="equipe-container">
                    <div class="form-group">
                        <label>Nome:</label>
                        <input type="text" class="equipe-nome">
                    </div>
                    <div class="form-group">
                        <label>Função / Cargo:</label>
                        <input type="text" class="equipe-funcao">
                    </div>
                    <div class="form-group">
                        <label>Qtd:</label>
                        <input type="number" class="equipe-qtd" min="1">
                    </div>
                    <button class="remove-btn" onclick="removeEquipe(this)">Remover</button>
                </div>
            </div>
            <button class="add-btn" onclick="addEquipe()">Adicionar Mais Mão de Obra</button>
        </div>
        <div class="form-section">
            <h3>Tarefas Realizadas</h3>
            <div class="form-group">
                <textarea id="tarefas" rows="5"></textarea>
            </div>
        </div>
        <div class="form-section">
            <h3>Ocorrências</h3>
            <div class="form-group">
                <textarea id="ocorrencias" rows="5"></textarea>
            </div>
        </div>
        <div class="form-section">
            <h3>Fotos da Manutenção</h3>
            <div class="form-group">
                <input type="file" id="fotos" multiple accept="image/*">
            </div>
        </div>
        <button class="submit-btn" onclick="salvarRDO()">Gerar Laudo e Salvar</button>
    </div>

    <div id="rdos-concluidos" class="tab-content">
        <h2>Relatórios de Obras Concluídos</h2>
        <div id="rdos-list">Carregando relatórios...</div>
    </div>

    <div id="agendamentos" class="tab-content">
        <h2>Agendamentos de Manutenção</h2>
        <div id="alert-urgencia" class="alert">⚠️ <strong>ATENÇÃO:</strong> Existem agendamentos com status de <strong>Urgência</strong>!</div>
        <div class="form-section">
            <h3>Novo Agendamento</h3>
            <div class="form-group">
                <label>Nome da Unidade:</label>
                <input type="text" id="agendamento-unidade">
            </div>
            <div class="form-group">
                <label>Data Agendada:</label>
                <input type="date" id="agendamento-data">
            </div>
            <div class="form-group">
                <label>Descrição do Serviço:</label>
                <textarea id="agendamento-descricao" rows="5"></textarea>
            </div>
            <div class="form-group">
                <label>Status:</label>
                <select id="agendamento-status">
                    <option value="Normal">Normal</option>
                    <option value="Urgência">Urgência</option>
                </select>
            </div>
            <button class="submit-btn" onclick="salvarAgendamento()">Salvar Agendamento</button>
        </div>
        <h3>Lista de Agendamentos</h3>
        <div id="agendamentos-list">Carregando agendamentos...</div>
    </div>

    <!-- Modal para Sucesso e Fotos -->
    <div id="success-modal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closeSuccessModal()">&times;</span>
            <h3 id="success-title">Operação Concluída</h3>
            <p id="success-message"></p>
            <a id="pdf-link" href="" target="_blank">Ver PDF</a>
            <button id="share-whatsapp" class="share-btn" onclick="sharePdf()">Enviar via WhatsApp</button>
        </div>
    </div>

    <div id="photos-modal" class="modal">
        <div class="modal-content">
            <span class="close-btn" onclick="closePhotosModal()">&times;</span>
            <h3>Fotos do RDO</h3>
            <div id="photos-content"></div>
        </div>
    </div>

    <script>
        const WEB_APP_URL = 'https://script.google.com/macros/s/AKfycbz9rjeJXmkwRSLn-UXGJodVhqE5qT5p7RS1C4FEjKVWmNCvyOqbqA1LD0CHqHPxSaHX1w/exec';

        // Função para abrir abas
        function openTab(tabId) {
            document.querySelectorAll('.tab-content').forEach(tab => tab.classList.remove('active'));
            document.querySelectorAll('.tab-button').forEach(btn => btn.classList.remove('active'));
            document.getElementById(tabId).classList.add('active');
            document.querySelector(`[onclick="openTab('${tabId}')"]`).classList.add('active');

            if (tabId === 'rdos-concluidos') loadRDOs();
            if (tabId === 'agendamentos') loadAgendamentos();
        }

        // Carregar agendamentos pendentes no select
        function loadPendingAgendamentos() {
            fetch(`${WEB_APP_URL}?action=getPendingAgendamentos`)
                .then(response => response.json())
                .then(data => {
                    const select = document.getElementById('agendamento-select');
                    select.innerHTML = '<option value="">Selecione um agendamento</option>';
                    data.forEach(ag => {
                        select.innerHTML += `<option value="${ag.numeroRDO}">${ag.numeroRDO} - ${ag.unidade} (${ag.dataAgendamento})</option>`;
                    });
                })
                .catch(error => console.error('Erro ao carregar agendamentos pendentes:', error));
        }

        // Alternar tipo de RDO
        function toggleRdoType() {
            const rdoType = document.getElementById('rdo-type').value;
            const agendamentoSelect = document.getElementById('agendamento-select');
            if (rdoType === 'agendamento') {
                agendamentoSelect.style.display = 'block';
                loadPendingAgendamentos();
            } else {
                agendamentoSelect.style.display = 'none';
            }
        }

        // Adicionar mão de obra
        function addEquipe() {
            const container = document.getElementById('equipe-container');
            const div = document.createElement('div');
            div.className = 'equipe-container';
            div.innerHTML = `
                <div class="form-group">
                    <label>Nome:</label>
                    <input type="text" class="equipe-nome">
                </div>
                <div class="form-group">
                    <label>Função / Cargo:</label>
                    <input type="text" class="equipe-funcao">
                </div>
                <div class="form-group">
                    <label>Qtd:</label>
                    <input type="number" class="equipe-qtd" min="1">
                </div>
                <button class="remove-btn" onclick="removeEquipe(this)">Remover</button>
            `;
            container.appendChild(div);
        }

        // Remover mão de obra
        function removeEquipe(btn) {
            btn.parentElement.remove();
        }

        // Carregar RDOs (modernizado com cards)
        function loadRDOs() {
            fetch(`${WEB_APP_URL}?action=getListaRDOs`)
                .then(response => response.json())
                .then(data => {
                    const container = document.getElementById('rdos-list');
                    container.innerHTML = '';
                    data.forEach(rdo => {
                        let equipeList = '';
                        try {
                            const equipe = JSON.parse(rdo.equipe);
                            equipeList = equipe.map(m => `<li>${m.nome} (${m.funcao}, Qtd: ${m.qtd})</li>`).join('');
                        } catch (e) {
                            equipeList = '<li>Erro ao carregar equipe</li>';
                        }
                        container.innerHTML += `
                            <div class="rdos-card">
                                <h4>Nº ${rdo.numeroRDO} - ${rdo.unidade} (${rdo.data})</h4>
                                <p><strong>Fiscal:</strong> ${rdo.fiscal}</p>
                                <p><strong>Tarefas:</strong> ${rdo.tarefasRealizadas}</p>
                                <p><strong>Ocorrências:</strong> ${rdo.ocorrencias}</p>
                                <p><strong>Equipe:</strong> <ul>${equipeList}</ul></p>
                                <a href="${rdo.pdfUrl}" target="_blank">Ver PDF</a>
                                <button onclick="showPhotos(['${rdo.fotosUrls.join("','")}'])">Ver Fotos</button>
                            </div>
                        `;
                    });
                })
                .catch(error => {
                    console.error('Erro ao carregar RDOs:', error);
                    document.getElementById('rdos-list').innerHTML = 'Erro ao carregar relatórios.';
                });
        }

        // Carregar agendamentos
        function loadAgendamentos() {
            fetch(`${WEB_APP_URL}?action=getAgendamentos`)
                .then(response => response.json())
                .then(data => {
                    const container = document.getElementById('agendamentos-list');
                    container.innerHTML = '';
                    const hasUrgencia = data.some(ag => ag.status === 'Urgência');
                    document.getElementById('alert-urgencia').style.display = hasUrgencia ? 'block' : 'none';
                    data.forEach(ag => {
                        container.innerHTML += `
                            <div class="rdos-card">
                                <h4>Nº ${ag.numeroRDO} - ${ag.unidade} (${ag.dataAgendamento}) - ${ag.status}</h4>
                                <p>Criado em: ${ag.dataCriacao}</p>
                                <p>Descrição: ${ag.descricao}</p>
                            </div>
                        `;
                    });
                })
                .catch(error => {
                    console.error('Erro ao carregar agendamentos:', error);
                    document.getElementById('agendamentos-list').innerHTML = 'Erro ao carregar agendamentos.';
                });
        }

        // Mostrar fotos no modal
        function showPhotos(urls) {
            const modal = document.getElementById('photos-modal');
            const content = document.getElementById('photos-content');
            content.innerHTML = urls.map(url => `<img src="${url}" style="max-width: 100%; margin: 5px; border-radius: 4px;">`).join('');
            modal.style.display = 'flex';
        }

        // Fechar modal de fotos
        function closePhotosModal() {
            document.getElementById('photos-modal').style.display = 'none';
        }

        // Mostrar modal de sucesso
        function showSuccessModal(title, message, pdfUrl) {
            document.getElementById('success-title').innerText = title;
            document.getElementById('success-message').innerText = message;
            document.getElementById('pdf-link').href = pdfUrl;
            document.getElementById('pdf-link').innerText = 'Ver PDF';
            document.getElementById('success-modal').style.display = 'flex';
            document.getElementById('share-whatsapp').dataset.pdfUrl = pdfUrl;
        }

        // Fechar modal de sucesso
        function closeSuccessModal() {
            document.getElementById('success-modal').style.display = 'none';
        }

        // Compartilhar PDF via WhatsApp (ou outro app)
        function sharePdf() {
            const pdfUrl = document.getElementById('share-whatsapp').dataset.pdfUrl;
            if (navigator.share) {
                navigator.share({
                    title: 'Laudo PDF',
                    text: 'Aqui está o laudo gerado!',
                    url: pdfUrl
                }).then(() => console.log('Compartilhado com sucesso'))
                  .catch(error => alert('Erro ao compartilhar: ' + error.message));
            } else {
                alert('Compartilhamento não suportado. Copie o link: ' + pdfUrl);
            }
        }

        // Salvar RDO
        function salvarRDO() {
            const rdoType = document.getElementById('rdo-type').value;
            const data = {
                action: 'salvarRDO',
                data: document.getElementById('data').value,
                unidade: document.getElementById('unidade').value,
                fiscal: document.getElementById('fiscal').value,
                equipe: Array.from(document.querySelectorAll('.equipe-container')).map(container => ({
                    nome: container.querySelector('.equipe-nome').value,
                    funcao: container.querySelector('.equipe-funcao').value,
                    qtd: container.querySelector('.equipe-qtd').value
                })),
                tarefasRealizadas: document.getElementById('tarefas').value,
                ocorrencias: document.getElementById('ocorrencias').value,
                fotos: [],
                rdoAgendamentoNum: rdoType === 'agendamento' ? document.getElementById('agendamento-select').value : ''
            };

            if (!data.data || !data.unidade || !data.fiscal || !data.tarefasRealizadas) {
                alert('Preencha todos os campos obrigatórios.');
                return;
            }

            const files = document.getElementById('fotos').files;
            const promises = Array.from(files).map(file => {
                return new Promise((resolve) => {
                    const reader = new FileReader();
                    reader.onload = () => resolve(reader.result);
                    reader.readAsDataURL(file);
                });
            });

            Promise.all(promises)
                .then(fotos => {
                    data.fotos = fotos;
                    fetch(WEB_APP_URL, {
                        method: 'POST',
                        body: JSON.stringify(data),
                        headers: { 'Content-Type': 'text/plain;charset=utf-8' }
                    })
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            showSuccessModal('RDO Concluído', 'Laudo salvo com sucesso!', result.pdfUrl);
                            loadRDOs(); // Atualiza lista
                        } else {
                            alert('Erro: ' + result.message);
                        }
                    })
                    .catch(error => alert('Erro ao salvar RDO: ' + error.message));
                });
        }

        // Salvar agendamento
        function salvarAgendamento() {
            const data = {
                action: 'salvarAgendamento',
                unidade: document.getElementById('agendamento-unidade').value,
                dataAgendamento: document.getElementById('agendamento-data').value,
                descricao: document.getElementById('agendamento-descricao').value,
                status: document.getElementById('agendamento-status').value
            };

            fetch(WEB_APP_URL, {
                method: 'POST',
                body: JSON.stringify(data),
                headers: { 'Content-Type': 'text/plain;charset=utf-8' }
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    showSuccessModal('Agendamento Concluído', 'Agendamento salvo com sucesso! Nenhum PDF gerado para agendamento.', '#'); // Sem PDF
                    document.getElementById('pdf-link').style.display = 'none';
                    document.getElementById('share-whatsapp').style.display = 'none';
                    document.getElementById('agendamento-unidade').value = '';
                    document.getElementById('agendamento-data').value = '';
                    document.getElementById('agendamento-descricao').value = '';
                    loadAgendamentos();
                } else {
                    alert('Erro: ' + result.message);
                }
            })
            .catch(error => alert('Erro ao salvar agendamento: ' + error.message));
        }

        // Carregar dados ao iniciar
        document.addEventListener('DOMContentLoaded', () => {
            loadRDOs();
            loadAgendamentos();
            loadPendingAgendamentos();
        });
    </script>
</body>
</html>
